{"version":3,"names":["loginCss","RfLoginStyle0","Login","emailInputChange","event","value","target","console","log","emailPattern","emailValid","test","this","isEmailValid","passwordInputChange","isPasswordValid","onSubmitForm","preventDefault","email","emailInputElement","password","passwordInputElement","isLoginSuccess","render","emailError","h","key","class","passwordError","message","action","onSubmit","bind","type","placeholder","ref","el","emailInputBind","onInput","xmlns","viewBox","d","passwordInputBind","href","disabled"],"sources":["src/components/login/login.css?tag=rf-login&encapsulation=shadow","src/components/login/login.tsx"],"sourcesContent":["* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: sans-serif;\r\n}\r\n\r\n.main {\r\n    width: 100%;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: #6e7373;\r\n}\r\n\r\n.wrapper {\r\n    width: 380px;\r\n    padding: 40px 30px 50px 30px;\r\n    background: #fff;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.wrapper header {\r\n    font-size: 35px;\r\n    font-weight: 600;\r\n}\r\n\r\n.wrapper form {\r\n    margin: 40px 0;\r\n}\r\n\r\nform .field {\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nform .field .input-area {\r\n    height: 50px;\r\n    width: 100%;\r\n    position: relative;\r\n}\r\n\r\nform input {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    padding: 0 45px;\r\n    font-size: 18px;\r\n    background: none;\r\n    border-radius: 5px;\r\n    border-bottom-width: 2px;\r\n}\r\n\r\nform button{\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 15px 45px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    background-color: 6e7373;\r\n    border-radius: 5px;\r\n    border-bottom-width: 2px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.field .input-area .position {\r\n    fill: 6e7373;\r\n    width: 25px; \r\n    height: 25px;  \r\n    position: absolute; \r\n    top: 50%; \r\n    transform: translateY(-50%)\r\n}\r\n\r\n.input-area .design {\r\n    left: 15px;\r\n    fill: #6e7373;\r\n}\r\n\r\nform input::placeholder {\r\n    color: #6e7373;\r\n    font-size: 17px;\r\n}\r\n\r\nform .field .error-txt {\r\n    color: #dc3545;\r\n    text-align: left;\r\n    margin-top: 5px;\r\n}\r\n\r\nform .pass-txt {\r\n    text-align: left;\r\n    margin-top: -10px;\r\n}\r\n\r\n.wrapper a {\r\n    color: #5372F0;\r\n    text-decoration: none;\r\n}\r\n\r\n.msg-s{\r\n    color: green;\r\n    font-size: 20px;\r\n    margin-top: 15px;\r\n}\r\n\r\n.msg-i{\r\n    color: #dc3545;\r\n    font-size: 20px;\r\n    margin-top: 15px;\r\n}\r\n\r\n\r\n\r\n","import { Component, h, State } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'rf-login',\r\n  styleUrl: './login.css',\r\n  shadow: true,\r\n})\r\nexport class Login {\r\n  emailInputElement: HTMLInputElement;\r\n  passwordInputElement: HTMLInputElement;\r\n  @State() emailInputBind: string;\r\n  @State() passwordInputBind: string;\r\n  @State() isEmailValid = 'blank';\r\n  @State() isPasswordValid = false;\r\n  @State() isLoginSuccess = '';\r\n  emailInputChange(event: Event) {\r\n    let value = (event.target as HTMLInputElement).value;\r\n    console.log(value);\r\n    let emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    let emailValid = emailPattern.test(value)\r\n    if (value == '') {\r\n      this.isEmailValid = 'blank';\r\n    } else if(!emailValid){\r\n      this.isEmailValid = 'notEmail';\r\n    }else{\r\n      this.isEmailValid = 'valid'\r\n    }\r\n  }\r\n\r\n  passwordInputChange(event: Event) {\r\n    let value = (event.target as HTMLInputElement).value;\r\n    console.log(value);\r\n    if ((value == '')) {\r\n      this.isPasswordValid = false;\r\n    } else {\r\n      this.isPasswordValid = true;\r\n    }\r\n  }\r\n\r\n  onSubmitForm(event: Event) {\r\n    event.preventDefault();\r\n    let email = this.emailInputElement.value;\r\n    let password = this.passwordInputElement.value;\r\n    \r\n    console.log(email);\r\n    console.log(password);\r\n    if (email == 'stencil@live.com' && password == 'stencil123') {\r\n      this.isLoginSuccess = 'success';\r\n    } else {\r\n      this.isLoginSuccess = 'fail';\r\n    }\r\n  }\r\n  render() {\r\n    let emailError = <div></div>;\r\n    if (this.isEmailValid == 'blank') {\r\n      emailError = <div class=\"error-txt\">Email can't be blank</div>;\r\n    }\r\n    if (this.isEmailValid == 'notEmail') {\r\n      emailError = <div class=\"error-txt\">Email not valid</div>;\r\n    }\r\n    let passwordError = <div></div>;\r\n    if (!this.isPasswordValid) {\r\n      passwordError = <div class=\"error-txt\">Password can't be blank</div>;\r\n    }\r\n\r\n    let message = <div></div>;\r\n    if (this.isLoginSuccess == 'success') {\r\n      message = <div class=\"msg-s\">Login successful</div>;\r\n    }\r\n    if (this.isLoginSuccess == 'fail') {\r\n      message = <div class=\"msg-i\">Email or Password incorrect</div>;\r\n    }\r\n    return (\r\n      <div class=\"main\">\r\n        <div class=\"wrapper\">\r\n          <header>Login Form</header>\r\n          <form action=\"#\" onSubmit={this.onSubmitForm.bind(this)}>\r\n            <div class=\"field email\">\r\n              <div class=\"input-area\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email Address\"\r\n                  ref={el => (this.emailInputElement = el)}\r\n                  value={this.emailInputBind}\r\n                  onInput={this.emailInputChange.bind(this)}\r\n                ></input>\r\n                <svg class=\"position design\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n                  .\r\n                  <path d=\"M48 64C21.5 64 0 85.5 0 112c0 15.1 7.1 29.3 19.2 38.4L236.8 313.6c11.4 8.5 27 8.5 38.4 0L492.8 150.4c12.1-9.1 19.2-23.3 19.2-38.4c0-26.5-21.5-48-48-48H48zM0 176V384c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V176L294.4 339.2c-22.8 17.1-54 17.1-76.8 0L0 176z\" />\r\n                </svg>\r\n              </div>\r\n              {emailError}\r\n            </div>\r\n            <div class=\"field password\">\r\n              <div class=\"input-area\">\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  ref={el => (this.passwordInputElement = el)}\r\n                  value={this.passwordInputBind}\r\n                  onInput={this.passwordInputChange.bind(this)}\r\n                ></input>\r\n                <svg class=\"position design\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n                  <path d=\"M144 144v48H304V144c0-44.2-35.8-80-80-80s-80 35.8-80 80zM80 192V144C80 64.5 144.5 0 224 0s144 64.5 144 144v48h16c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V256c0-35.3 28.7-64 64-64H80z\" />\r\n                </svg>\r\n              </div>\r\n              {passwordError}\r\n            </div>\r\n            <div class=\"pass-txt\">\r\n              <a href=\"#\">Forgot password?</a>\r\n            </div>\r\n            {message}\r\n            <button type=\"submit\" disabled={this.isEmailValid == 'blank' || this.isEmailValid == 'notEmail' || !this.isPasswordValid}>\r\n              LOG IN\r\n            </button>\r\n          </form>\r\n          <div class=\"sign-txt\">\r\n            Not yet member? <a href=\"#\">Signup now</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}